version: '3.8'

services:
  crittercatcher:
    build: .
    image: crittercatcher-ai:latest
    container_name: crittercatcher-ai
    restart: unless-stopped
    
    # Environment variables
    environment:
      - LOG_LEVEL=INFO
      - RING_USERNAME=${RING_USERNAME}
      - RING_PASSWORD=${RING_PASSWORD}
      - RUN_ONCE=false
      - TZ=America/New_York
      - WEB_PORT=8080
      - PUID=99
      - PGID=100
      - UMASK=0000
    
    # Volume mappings for Unraid
    volumes:
      # Configuration (read-write so web UI can update settings)
      - ./config:/app/config
      
      # Downloaded videos (temporary storage)
      - /mnt/user/appdata/crittercatcher/downloads:/data/downloads
      
      # Sorted videos (organized by class)
      - /mnt/user/Videos/CritterCatcher/sorted:/data/sorted
      
      # Face encodings database and unknown faces
      - /mnt/user/appdata/crittercatcher/faces:/data/faces
      
      # Detected objects and discoveries (for Review & Label feature)
      - /mnt/user/appdata/crittercatcher/objects:/data/objects
      
      # Ring authentication token
      - /mnt/user/appdata/crittercatcher/tokens:/data/tokens
      
      # Training data for species classifiers
      - /mnt/user/appdata/crittercatcher/training_data:/data/training_data
      
      # Trained models for specialized species detection
      - /mnt/user/appdata/crittercatcher/models:/data/models
    
    # Optional: GPU support for faster inference
    # Uncomment if you have NVIDIA GPU and nvidia-docker installed
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
    
    # Network mode
    network_mode: bridge
    
    # Ports
    ports:
      - "8080:8080"
    
    # Healthcheck
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
